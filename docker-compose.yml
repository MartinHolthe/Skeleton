version: '3.8'
services:
  postgres:
    image: postgres
    container_name: postgres-docker-container
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: testdb
    volumes:
      - ./postgres-docker/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres-docker/auth.sql:/docker-entrypoint-initdb.d/auth.sql
    #  - /var/lib/postgres-docker
    ports:
      - '5432:5432'

  node-docker:
    container_name: node-docker-container
    restart: always
    build:
      context: ./node-docker
      target: dev
    volumes:
      - ./node-docker:/src
    ports:
      - '8081:8080'
    environment:
      DATABASE_URL: postgres://postgres:postgres@node-docker-container:5432/testdb
      NODE_ENV: dev
    depends_on:
      - postgres

  angular-docker:
    container_name: angular-docker-container
    build: ./angular-docker
    ports:
      - '9000:80'
    depends_on:
      - postgres

  flask-docker:
    container_name: flask-docker-container
    build: ./flask-docker
    ports:
      - '5000:5000'
    depends_on:
      - postgres

  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    # restart: on-failure
    environment:
      - DB_VENDOR=POSTGRES
      - DB_ADDR=postgres
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=keycloak
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=password
    ports:
      - '8180:8080'
    depends_on:
      - postgres
#volumes: db-data
#use named volumes
